@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>chaos組牌器</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css" integrity="sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS" crossorigin="anonymous">
    <script src="~/Content/vue.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.18.0/axios.min.js"></script>
    <style>
        * {
            /*border: 1px solid black*/
            font-family: '微軟正黑體'
        }

        .img-preview img {
            width: 100%
        }

        .card-list {
            height: 80vh;
            overflow-y: scroll;
        }

        .deck-area {
            position: relative;
            height: 70vh;
        }

        .main-area-card-img, .extra-area-card-img {
            width: 9%;
            display: inline-block;
        }

            .main-area-card-img > img, .extra-area-card-img > img {
                max-width: 100%
            }

        .extra-deck-area {
            width: 100%;
            position: absolute;
            bottom: 10%;
        }
    </style>
</head>
<body>
    <div class="container" id="app">
        <div class="row">
            <div class="col-3">
                <div class="img-preview pt-3">
                    <img src="~/Images/2angel1.0/10001.jpg" alt="" />
                </div>
                <div class="detail-card-info">
                    <div id="detail-card-name" class="text-center">卡片名稱</div>
                    <table class="table">
                        <tr><td>屬性</td><td>火</td><td>種類</td><td>Set</td></tr>
                        <tr><td>攻擊</td><td>4</td><td>耐久</td><td>3</td></tr>
                        <tr>
                            <td class="value effects" colspan="4">
                                我是效果文阿兄弟，我是效果文阿兄弟，我是效果文阿兄弟，我是效果文阿兄弟，我是效果文阿兄弟，我是效果文阿兄弟，我是效果文阿兄弟，我是效果文阿兄弟，我是效果文阿兄弟，我是效果文阿兄弟，我是效果文阿兄弟，我是效果文阿兄弟，我是效果文阿兄弟，我是效果文阿兄弟，我是效果文阿兄弟，我是效果文阿兄弟，我是效果文阿兄弟，我是效果文阿兄弟，我是效果文阿兄弟，我是效果文阿兄弟，我是效果文阿兄弟，我是效果文阿兄弟，
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="col-7">
                <div class="player-operate-area my-4">
                    <div class="form-group">
                        <label for="ddl-desk">選擇牌組：</label>
                        <select id="ddl-desk" v-model="currentDeck.sid" v-on:change="changeCurrentDeck">
                            <option :value="deck.sid" v-for="deck in decks">{{deck.name}}</option>
                        </select>
                        <input type="button" value="刪除" class="btn btn-dark" v-on:click="deleteDeck" />
                    </div>
                    <div class="form-group">
                        <label for="txt-deck">新建牌組：</label>
                        <input type="text" id="txt-deck" v-model="txtDeckName"/>
                        <input type="button" value="新增" class="btn btn-dark" v-on:click="createNewDeck" />
                        <input type="button" value="輸出" class="btn btn-dark" />
                        <input type="button" value="輸入" class="btn btn-dark" />
                    </div>
                </div>
                <div class="deck-area">
                    <div class="main-deck-area">
                        <h4 class="text-center">Main Deck</h4>
                        <div>
                            <div class="main-area-card-img">
                                <img src="~/Images/2angel1.0/10002.jpg" alt="" />
                            </div>
                        </div>
                    </div>
                    <div class="extra-deck-area">
                        <h4 class="text-center">Extra Deck</h4>
                        <div>
                            <div class="extra-area-card-img">
                                <img src="~/Images/2angel1.0/10002.jpg" alt="" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-2">
                <div class="form-group pt-3">
                    <label for="card-search"><input type="text" class="form-control" id="card-search" placeholder="請輸入關鍵字" v-model="txtSearch" v-on:keyup="searchCardPool(1)"></label>
                </div>
                <div class="card-search-area">
                    <div class="card-list">
                        <div class="search-img mt-2 mr-2" v-for="item in cardPool">
                            <img :src="'/Images/' + item.IMG_FOLDER + '/' + item.IMG_NAME" alt="" class="img-fluid" />
                        </div>
                        <div class="my-2">
                            <input type="button" value="更多" class="btn btn-dark d-block mx-auto" v-if="moreBtnShow" v-on:click="searchCardPool(2)" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/bundles/jquery")
    <script>    
        var app = new Vue({
            el: '#app',
            data: {
                txtDeckName: "",
                txtSearch:"",
                cardDetail: {},
                currentDeck: {},
                selectedDeck: "",
                decks: [],
                page: 1,
                cardPool: [],
                moreBtnShow: false,
            },
            methods: {
                createNewDeck: function () {
                    let _this =this
                    if (_this.txtDeckName) {
                        _this.currentDeck = new Deck(_this.generateSId(),_this.txtDeckName)
                        _this.decks.push(_this.currentDeck)
                    }
                },
                deleteDeck: function () {
                    let _this = this
                    let index = this.decks.findIndex(x => x.sid == _this.currentDeck.sid);
                    if (index > -1)
                    this.decks.splice(index,1)
                },
                changeCurrentDeck: function () {
                    let _this = this
                    _this.currentDeck = this.decks.filter(x => x.sid == sid) 
                },
                generateSId: function () {
                    return Math.floor((1 + Math.random()) * 0x1000000000).toString("16") + Math.floor((1 + Math.random()) * 0x1000000000).toString("16")
                },
                // type : 1 = 基本搜尋 , 2 = 更多搜尋
                searchCardPool: function (type) {
                    let _this = this
                    if (_this.txtSearch) {
                        if (type == 1) {
                            _this.page = 1
                        }
                        else {
                            _this.page++
                        }
                        var bodyFormData = new FormData();
                        bodyFormData.set('keyword', _this.txtSearch);
                        bodyFormData.set('page', _this.page);
                        axios({
                            url: '/home/search',
                            method: 'post',
                            data: bodyFormData,
                        })
                            .then(function (result) {
                                if (result.data.Success) {
                                    let returnCardPool = JSON.parse(result.data.CardPool)
                                    if (returnCardPool.length == 10) {
                                        _this.moreBtnShow = true
                                    }
                                    else {
                                        _this.moreBtnShow = false
                                    }
                                    _this.cardPool = [..._this.cardPool, ...returnCardPool]
                                }
                                else {
                                    _this.cardPool = []
                                }
                            })
                            .catch(err => {
                                console.log(err);
                            })
                    }
                    else {
                        _this.moreBtnShow = false
                    }
                },
            },
        })

        //類別定義
        class Deck {
            constructor(sid, name) {
                this.sid = sid
                this.name = name
            }
        }
    </script>
</body>
</html>
